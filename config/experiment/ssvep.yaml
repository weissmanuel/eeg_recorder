
sources:
  - - ${headset.source_id}
    - 'EEG'
  - - 'ssvep_train_markers'
    - 'MARKER'

persisters:
  - ${persistence.persisters.mne_raw_persister}
persister_workers: null
#  - ${persistence.workers.cyclic}

labels: [6, 10, 15, 19]

window_size_seconds: 1
window_shift_seconds: null
signal_duration_seconds: 15
event_offset_seconds: 2

# Preprocessors applied to the raw input signal
# received by the recorder / headset
preprocessors: []
#preprocessors:
#  - name: 'notch_filter'
#    freqs: 50
#    quality: 30
#    sfreq: ${headset.sfreq}
#    stages: ['inference']
#  - name: 'bandpass_filter'
#    low_cut: 4
#    high_cut: 30
#    order: 4
#    sfreq: ${headset.sfreq}
#    stages: ['inference']


# Preprocessors applied to the mne raw object
#raw_preprocessors: []
raw_preprocessors:
  - name: 'notch_filter'
    kwargs:
      freqs: 50
      method: 'iir'
      filter_length: 'auto'
      notch_widths: 5
#      stages: ['training']
  - name: 'bandpass_filter'
    kwargs:
      low_cut: 4
      high_cut: 30
      method: 'fir'
#      stages: ['training']
  - name: 'channel_picker'
    kwargs:
      picks: ['PO7', 'Oz', 'PO8']
  #      stages: ['training']
  - name: 'channel_interpolation'
    kwargs:
      threshold: 50.0
  #      stages: ['training']
  - name: 'reference'
    kwargs:
      ref_channels: 'average'
      stages: ['training']

# Preprocessors applied to the mne split epochs
#epoch_preprocessors: []
epoch_preprocessors:
  - name: 'bandpass_filter'
    kwargs:
      low_cut: 4
      high_cut: 30
      method: 'iir'
      stages: ['training']

training:
  enabled: True
  type: 'ssvep'
  pipeline_path: './data/models/ssvep_pipeline.pth'
  pipeline:
    - name: 'CCA'
      kwargs:
        sfreq: ${headset.sfreq}
        target_frequencies: ${experiment.labels}
        signal_duration_seconds: ${experiment.window_size_seconds}
        n_harmonics: 4
#    - name: 'consecutive_majority_vote_classifier'
#      kwargs:
#        window_size: 5
#        base_classifier:
#          - name: 'CCA'
#            kwargs:
#              sfreq: ${headset.sfreq}
#              target_frequencies: ${experiment.labels}
#              signal_duration_seconds: ${experiment.window_size_seconds}
#              n_harmonics: 4
#    - name: 'filterbank'
#      kwargs:
#        sfreq: ${headset.sfreq}
#    - name: 'CCA'
##     - name: 'ECCA'
##     - name: 'MSCCA_AND_MSETRCA'
#      kwargs:
#        sfreq: ${headset.sfreq}
#        target_frequencies: ${experiment.labels}
#        signal_duration_seconds: ${experiment.window_size_seconds}
#        n_jobs: 4

#    - name: 'fft'
#      kwargs: {}
##    - name: 'averager'
##      kwargs:
##        window_size: 2
#    - name: 'channel_reshape'
#      kwargs: {}
##    - name: 'random_forest'
##      kwargs: {}
#    - name: 'consecutive_majority_vote_classifier'
#      kwargs:
#        window_size: 5
#        base_classifier:
#          name: 'random_forest'
#          kwargs: {}

decoding:
  type: 'model' # threshold, model
#  type: 'threshold' # threshold, model
  decoder_path: ${experiment.training.pipeline_path}

visualisation: ${visualization}